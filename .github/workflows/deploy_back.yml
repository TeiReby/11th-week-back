name: "Deploy Django Backend to EC2 via SSH"

# answer 브랜치에 Push(=Merge)가 발생했을 때 트리거
on:
  push:
    branches:
      - answer

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1) 코드 체크아웃: 소스코드 가져오기
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2) 배포용 ZIP 생성
      - name: Create deploy ZIP
        run: |
          # 레포 루트(모든 파일) → backend-deploy.zip ( .git/, .github/ 제외 )
          zip -r backend-deploy.zip ./* -x "*.git*" -x ".github/*"

      # 3) GitHub Secrets의 SSH 키를 파일로 저장
      - name: Setup SSH key
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" | base64 -d > ./deploy_key.pem
          chmod 600 ./deploy_key.pem

      # 4) ZIP 파일을 EC2 /tmp/ 에 업로드
      - name: Copy ZIP to EC2
        run: |
          scp -i ./deploy_key.pem -o StrictHostKeyChecking=no \
            backend-deploy.zip \
            ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/tmp/

      # 5) EC2에 deploy.sh 실행 명령 전달
      - name: Execute deploy script on EC2
        run: |
          ssh -i ./deploy_key.pem -o StrictHostKeyChecking=no \
            ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} \
            "bash /home/${{ secrets.EC2_USER }}/deploy.sh"

      # 6) 로컬에 남은 파일 정리 (선택)
      - name: Cleanup local artifacts
        if: always()
        run: |
          rm -f ./deploy_key.pem
          rm -f ./backend-deploy.zip
